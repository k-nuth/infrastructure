name: Conan

on: [push]

jobs:
  wait-for-dependencies:
    name: Wait for dependencies
    if: startsWith(github.ref, 'refs/heads/using') || 
        startsWith(github.ref, 'refs/heads/release') || 
        startsWith(github.ref, 'refs/heads/hotfix')
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: true
      - uses: actions/setup-python@v1
        with:
          python-version: "3.8"
      
      - name: Wait for dependencies
        env:
          CONAN_GCC_VERSIONS: 10
          CONAN_DOCKER_IMAGE: conanio/gcc10

        shell: bash
        run: |
          conan user
          conan remote add kth_temp https://api.bintray.com/conan/k-nuth/kth
          # REPO_NAME=$(echo $TRAVIS_REPO_SLUG| cut -d'/' -f 2)
          # echo $REPO_NAME
          # python ci_utils/wait_for_deps.py $REPO_NAME
          python ci_utils/wait_for_deps.py

# Wait for dependencies ----------------------------------------------
    - stage: wait for dependencies
      os: linux
      sudo: required
      dist: xenial
      language: python
      python: "3.7"
      services:
        - docker
      env: CONAN_GCC_VERSIONS=9 CONAN_DOCKER_IMAGE=conanio/gcc9
      if: branch =~ /^(release|hotfix).+$/    #Just releases
      script:
        - |
          conan user
          conan remote add kth_temp https://api.bintray.com/conan/k-nuth/kth
          # REPO_NAME=$(echo $TRAVIS_REPO_SLUG| cut -d'/' -f 2)
          # echo $REPO_NAME
          # python ci_utils/wait_for_deps.py $REPO_NAME
          python ci_utils/wait_for_deps.py

  generate-matrix:
    name: Generate Job Matrix
    runs-on: ubuntu-20.04
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - name: Generate Job Matrix
        id: set-matrix
        env:
          splitByBuildTypes: ${{ env.splitByBuildTypes }}
          MATRIX: '{"config": [{"name": "Linux GCC 10","compiler": "GCC","version": "10","os": "ubuntu-20.04"},{"name": "Linux GCC 9","compiler": "GCC","version": "9","os": "ubuntu-20.04"},{"name": "Linux GCC 8","compiler": "GCC","version": "8","os": "ubuntu-20.04"},{"name": "macOS apple-clang 12","compiler": "apple-clang","version": "12","os": "macos-10.15"}]}'
          # MATRIX: '{"config": [{"name": "macOS apple-clang 12","compiler": "apple-clang","version": "12","os": "macos-10.15"}]}'
        run: |
          echo "${MATRIX}"
          echo "::set-output name=matrix::${MATRIX}"

  builds:
    needs: generate-matrix
    runs-on: ${{ matrix.config.os }}
    strategy:
      fail-fast: false
      matrix: ${{fromJson(needs.generate-matrix.outputs.matrix)}}
    name: ${{ matrix.config.name }}
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: true
      - uses: actions/setup-python@v1
        with:
          python-version: "3.8"
  
      # - name: Install Dependencies
      #   run: |
      #     chmod +x ci_utils/.travis/install.sh
      #     ./ci_utils/.travis/install.sh
      #   shell: bash
  
      - name: Settting Linux EnvVars
        if: ${{ matrix.config.compiler == 'GCC' }}
        shell: bash
        run: |
          echo "CONAN_GCC_VERSIONS=${{ matrix.config.version }}" >> $GITHUB_ENV
          echo "CONAN_DOCKER_IMAGE=conanio/gcc${{ matrix.config.version }}" >> $GITHUB_ENV

      - name: Settting macOS EnvVars
        if: ${{ matrix.config.compiler == 'apple-clang' }}
        shell: bash
        run: |
          echo "CONAN_APPLE_CLANG_VERSIONS=${{ matrix.config.version }}.0" >> $GITHUB_ENV

      - name: Build
        env:
          CONAN_LOGIN_USERNAME: ${{ secrets.CONAN_LOGIN_USERNAME }}
          CONAN_PASSWORD: ${{ secrets.CONAN_PASSWORD }}
        shell: bash
        run: |
          echo ${{ matrix.config.compiler }}
          echo ${BPT_MATRIX}
          echo ${CONAN_STABLE_BRANCH_PATTERN}
          echo ${CONAN_GCC_VERSIONS}
          echo ${CONAN_APPLE_CLANG_VERSIONS}
          echo ${CONAN_DOCKER_IMAGE}
          echo ${CONAN_LOGIN_USERNAME}
          # chmod +x ci_utils/.travis/run.sh
          # ./ci_utils/.travis/run.sh

  print-branch:
    name: Print branch
    runs-on: ubuntu-20.04
    steps:
      - run: echo ${{github.ref}}

  static-checks:
    name: Static Checks
    if: github.ref == 'refs/heads/dev' || 
        startsWith(github.ref, 'refs/heads/using') || 
        startsWith(github.ref, 'refs/heads/release') || 
        startsWith(github.ref, 'refs/heads/hotfix')

    runs-on: ubuntu-20.04
    steps:
      - name: Static Checks
        shell: bash
        run: |
          echo ${{github.ref}}

  upload-aliases:
    name: Upload Aliases
    needs: [builds, static-checks]
    if: github.ref == 'refs/heads/dev' || 
        startsWith(github.ref, 'refs/heads/using') || 
        startsWith(github.ref, 'refs/heads/release') || 
        startsWith(github.ref, 'refs/heads/hotfix') ||
        startsWith(github.ref, 'refs/heads/feature') 
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: true
      - uses: actions/setup-python@v1
        with:
          python-version: "3.8"

      - name: Upload Aliases
        env:
          CONAN_LOGIN_USERNAME: ${{ secrets.CONAN_LOGIN_USERNAME }}
          CONAN_PASSWORD: ${{ secrets.CONAN_PASSWORD }}
        shell: bash
        run: |
          echo ${{github.ref}}
          cd ${TRAVIS_BUILD_DIR}
          echo $TRAVIS_REPO_SLUG
          git fetch --unshallow
          git fetch origin master:master
          # REPO_NAME=$(echo $TRAVIS_REPO_SLUG| cut -d'/' -f 2)

          echo "REPO_NAME=$(echo '${{ github.repository }}' | awk -F '/' '{print $1}')" >> $GITHUB_ENV
          echo $REPO_NAME

          eval $(python ci_utils/set_envvars_and_files.py)
          # conan remote add kthbuild_kth_temp_ https://api.bintray.com/conan/k-nuth/kth
          conan user
          conan user ${CONAN_LOGIN_USERNAME} -r kthbuild_kth_temp_ -p ${CONAN_PASSWORD}
          conan user
          echo "conan alias ${REPO_NAME}/0.X@kth/${KTH_CONAN_CHANNEL} ${REPO_NAME}/${KTH_CONAN_VERSION}@kth/${KTH_CONAN_CHANNEL}"
          conan alias "${REPO_NAME}/0.X@kth/${KTH_CONAN_CHANNEL}" "${REPO_NAME}/${KTH_CONAN_VERSION}@kth/${KTH_CONAN_CHANNEL}"
          echo "conan upload ${REPO_NAME}/0.X@kth/${KTH_CONAN_CHANNEL} --all -r kthbuild_kth_temp_"
          conan upload "${REPO_NAME}/0.X@kth/${KTH_CONAN_CHANNEL}" --all -r kthbuild_kth_temp_        
