name: Conan

on: [push]

jobs:
  generate-matrix:
    name: Generate Job Matrix
    runs-on: ubuntu-20.04
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - name: Generate Job Matrix
        id: set-matrix
        env:
          splitByBuildTypes: ${{ env.splitByBuildTypes }}
          MATRIX: '{"config": [{"name": "Linux GCC 10","compiler": "GCC","version": "10","os": "ubuntu-20.04"},{"name": "Linux GCC 9","compiler": "GCC","version": "9","os": "ubuntu-20.04"},{"name": "Linux GCC 8","compiler": "GCC","version": "8","os": "ubuntu-20.04"},{"name": "macOS apple-clang 12","compiler": "apple-clang","version": "12","os": "macos-10.15"}]}'
          # MATRIX: '{"config": [{"name": "macOS apple-clang 12","compiler": "apple-clang","version": "12","os": "macos-10.15"}]}'
        run: |
          echo "${MATRIX}"
          echo "::set-output name=matrix::${MATRIX}"

  builds:
    name: Builds
    needs: generate-matrix
    runs-on: ${{ matrix.config.os }}
    strategy:
      fail-fast: false
      matrix: ${{fromJson(needs.generate-matrix.outputs.matrix)}}
    name: ${{ matrix.config.name }}
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: true
      - uses: actions/setup-python@v1
        with:
          python-version: "3.8"          
  
      # - name: Install Dependencies
      #   run: |
      #     chmod +x ci_utils/.travis/install.sh
      #     ./ci_utils/.travis/install.sh
      #   shell: bash
  
      - name: Settting Linux EnvVars
        if: ${{ matrix.config.compiler == 'GCC' }}
        shell: bash
        run: |
          echo "CONAN_GCC_VERSIONS=${{ matrix.config.version }}" >> $GITHUB_ENV
          echo "CONAN_DOCKER_IMAGE=conanio/gcc${{ matrix.config.version }}" >> $GITHUB_ENV

      - name: Settting macOS EnvVars
        if: ${{ matrix.config.compiler == 'apple-clang' }}
        shell: bash
        run: |
          echo "CONAN_APPLE_CLANG_VERSIONS=${{ matrix.config.version }}.0" >> $GITHUB_ENV

      - name: Build
        env:
          CONAN_LOGIN_USERNAME: ${{ secrets.CONAN_LOGIN_USERNAME }}
          CONAN_PASSWORD: ${{ secrets.CONAN_PASSWORD }}
        shell: bash
        run: |
          echo ${{ matrix.config.compiler }}
          echo ${BPT_MATRIX}
          echo ${CONAN_STABLE_BRANCH_PATTERN}
          echo ${CONAN_GCC_VERSIONS}
          echo ${CONAN_APPLE_CLANG_VERSIONS}
          echo ${CONAN_DOCKER_IMAGE}
          echo ${CONAN_LOGIN_USERNAME}
          # chmod +x ci_utils/.travis/run.sh
          # ./ci_utils/.travis/run.sh

  print-branch:
    name: Print branch
    runs-on: ubuntu-20.04
    steps:
      - run: echo ${{github.ref}}

  static-checks:
    name: Static Checks
    runs-on: ubuntu-20.04
    steps:
      - name: Static Checks
        if: contains('
            refs/heads/using
            refs/heads/production
          ', github.ref)
        shell: bash
        run: |
          echo ${{github.ref}}
